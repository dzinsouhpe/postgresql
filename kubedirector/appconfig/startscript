#!/usr/bin/env bash

set -o pipefail
SELF=$(readlink -nf $0)
export CONFIG_BASE_DIR=$(dirname ${SELF})

source ${CONFIG_BASE_DIR}/logging.sh
source ${CONFIG_BASE_DIR}/utils.sh
source ${CONFIG_BASE_DIR}/macros.sh

if [[ "$1" == "--addnodes" ]]; then
    ## Nothing to do on the existing nodes when we receive this notification.
    exit 0
elif [[ "$1" == "--delnodes" ]]; then
    ## Nothing to do on the existing nodes when we receive this notification.
    exit 0
elif [[ "$1" == "--configure" ]]; then
    log "Configuration started"
    log "Configuration finished"
else
    echo "ERROR: Unknown command line option(s): '$@'"
    exit 10
fi

####################### AUTOGENERATED CODE STARTS BELOW #######################
log "------------------- [postgresql initdb] starting -------------------"
export PGDATA=/var/lib/pgsql/13/data/
export PGRUN=/var/run/postgresql
export PGLOG=/var/lib/pgsql/$PGMAJORVERSION/initdb.log
mkdir -p "$PGDATA"
chown postgres:postgres "$PGDATA"
chmod go-rwx "$PGDATA"
mkdir -p "$PGRUN"
chown postgres:postgres "$PGRUN"
chmod go-rwx "$PGRUN"
initdbcmd="/usr/pgsql-13/bin/initdb --pgdata='$PGDATA' -A scram-sha-256 --auth-local=peer --pwfile /dev/zero"
su -l postgres -c "$initdbcmd" >> "$PGLOG" 2>&1 < /dev/null
log "------------------- [postgresql initdb] completed -------------------"

log "------------------- [postgresql conf] starting -------------------"
rm -rf /var/lib/pgsql/13/data/postgresql.conf
cp ${CONFIG_BASE_DIR}/postgresql.conf /var/lib/pgsql/13/data/postgresql.conf
chown postgres:postgres /var/lib/pgsql/13/data/postgresql.conf
REPLACE_PATTERN @@@@LISTEN_ADDRESSES@@@@ /var/lib/pgsql/13/data/postgresql.conf GET_NODE_IPADDR
rm -rf /var/lib/pgsql/13/data/pg_hba.conf
cp ${CONFIG_BASE_DIR}/pg_hba.conf /var/lib/pgsql/13/data/pg_hba.conf
chown postgres:postgres /var/lib/pgsql/13/data/pg_hba.conf
log "------------------- [postgresql conf] completed -------------------"

log "------------------- [postgresql service] starting -------------------"
su -l postgres -c "/usr/pgsql-13/bin/postgresql-13-check-db-dir ${PGDATA}"
su -l postgres -c "/usr/pgsql-13/bin/postmaster -D ${PGDATA}" &
sleep 10 # TODO temporary workaround. Solution is check if database is ready
su -l postgres -c "createuser -s -w admin"
su -l postgres -c "psql -c \"ALTER ROLE admin WITH PASSWORD 'admin123';\""
log "------------------- [postgresql service] started -------------------"
